{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 AvenirNext-Regular;\f2\fmodern\fcharset0 CourierNewPSMT;
\f3\fmodern\fcharset0 CourierNewPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red42\green42\blue42;\red143\green8\blue19;
\red25\green69\blue182;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c21961\c21961\c21961;\cssrgb\c63529\c9412\c9412;
\cssrgb\c12157\c36078\c76471;\cssrgb\c50196\c50196\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs34 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Challenge\
\pard\pardeftab720\sl480\partightenfactor0

\f1\fs28 \cf3 \strokec3 Using the Python language, have the function\'a0
\f2 \cf4 \strokec4 SimpleAdding(
\f3\b \cf5 \strokec5 num
\f2\b0 \cf4 \strokec4 )
\f1 \cf3 \strokec3 \'a0add up all the numbers from 1 to\'a0
\f3\b \cf5 \strokec5 num
\f1\b0 \cf3 \strokec3 . For example: if the input is 4 then your program should return 10 because 1 + 2 + 3 + 4 = 10. For the test cases, the parameter\'a0
\f3\b \cf5 \strokec5 num
\f1\b0 \cf3 \strokec3 \'a0will be any number from 1 to 1000.\'a0\
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs34 \cf2 \strokec2 Sample Test Cases\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs26 \cf6 \strokec6 Input:\cf2 \strokec2 12\
\cf6 \strokec6 Output:\cf2 \strokec2 78\
\
\cf6 \strokec6 Input:\cf2 \strokec2 140\
\cf6 \strokec6 Output:\cf2 \strokec2 9870\
}
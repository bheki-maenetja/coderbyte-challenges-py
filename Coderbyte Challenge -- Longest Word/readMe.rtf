{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 AvenirNext-Regular;\f1\fmodern\fcharset0 CourierNewPSMT;\f2\fmodern\fcharset0 CourierNewPS-BoldMT;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red42\green42\blue42;\red143\green8\blue19;\red25\green69\blue182;
\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c21961\c21961\c21961;\cssrgb\c63529\c9412\c9412;\cssrgb\c12157\c36078\c76471;
\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl380\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Using the Python language, have the function\'a0
\f1 \cf3 \strokec3 LongestWord(
\f2\b \cf4 \strokec4 sen
\f1\b0 \cf3 \strokec3 )
\f0 \cf2 \strokec2 \'a0take the\'a0
\f2\b \cf4 \strokec4 sen
\f0\b0 \cf2 \strokec2 \'a0parameter being passed and return the largest word in the string. If there are two or more words that are the same length, return the first word from the string with that length. Ignore punctuation and assume\'a0
\f2\b \cf4 \strokec4 sen
\f0\b0 \cf2 \strokec2 \'a0will not be empty.\'a0\
\
\pard\pardeftab720\sl400\partightenfactor0

\f3\fs34 \cf5 \strokec5 Sample Test Cases\
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs26 \cf6 \strokec6 Input:\cf5 \strokec5 "fun&!! time"\
\cf6 \strokec6 Output:\cf5 \strokec5 "time"\
\
\cf6 \strokec6 Input:\cf5 \strokec5 "I love dogs"\
\cf6 \strokec6 Output:\cf5 \strokec5 "love"\
}